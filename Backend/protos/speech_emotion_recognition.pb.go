// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: protos/speech_emotion_recognition.proto

package speech_emotion_recognition

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Emotion int32

const (
	Emotion_Angry    Emotion = 0
	Emotion_Calm     Emotion = 1
	Emotion_Disgust  Emotion = 2
	Emotion_Fear     Emotion = 3
	Emotion_Happy    Emotion = 4
	Emotion_Neutral  Emotion = 5
	Emotion_Sad      Emotion = 6
	Emotion_Surprise Emotion = 7
)

// Enum value maps for Emotion.
var (
	Emotion_name = map[int32]string{
		0: "Angry",
		1: "Calm",
		2: "Disgust",
		3: "Fear",
		4: "Happy",
		5: "Neutral",
		6: "Sad",
		7: "Surprise",
	}
	Emotion_value = map[string]int32{
		"Angry":    0,
		"Calm":     1,
		"Disgust":  2,
		"Fear":     3,
		"Happy":    4,
		"Neutral":  5,
		"Sad":      6,
		"Surprise": 7,
	}
)

func (x Emotion) Enum() *Emotion {
	p := new(Emotion)
	*p = x
	return p
}

func (x Emotion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Emotion) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_speech_emotion_recognition_proto_enumTypes[0].Descriptor()
}

func (Emotion) Type() protoreflect.EnumType {
	return &file_protos_speech_emotion_recognition_proto_enumTypes[0]
}

func (x Emotion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Emotion.Descriptor instead.
func (Emotion) EnumDescriptor() ([]byte, []int) {
	return file_protos_speech_emotion_recognition_proto_rawDescGZIP(), []int{0}
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_speech_emotion_recognition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_protos_speech_emotion_recognition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_protos_speech_emotion_recognition_proto_rawDescGZIP(), []int{0}
}

func (x *Chunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type LoadDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ogrn string `protobuf:"bytes,1,opt,name=ogrn,proto3" json:"ogrn,omitempty"`
}

func (x *LoadDataRequest) Reset() {
	*x = LoadDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_speech_emotion_recognition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDataRequest) ProtoMessage() {}

func (x *LoadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_speech_emotion_recognition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDataRequest.ProtoReflect.Descriptor instead.
func (*LoadDataRequest) Descriptor() ([]byte, []int) {
	return file_protos_speech_emotion_recognition_proto_rawDescGZIP(), []int{1}
}

func (x *LoadDataRequest) GetOgrn() string {
	if x != nil {
		return x.Ogrn
	}
	return ""
}

type LoadDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emotion Emotion `protobuf:"varint,1,opt,name=emotion,proto3,enum=limbic.protos.speech_emotion_recognition.Emotion" json:"emotion,omitempty"`
}

func (x *LoadDataReply) Reset() {
	*x = LoadDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_speech_emotion_recognition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDataReply) ProtoMessage() {}

func (x *LoadDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_speech_emotion_recognition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDataReply.ProtoReflect.Descriptor instead.
func (*LoadDataReply) Descriptor() ([]byte, []int) {
	return file_protos_speech_emotion_recognition_proto_rawDescGZIP(), []int{2}
}

func (x *LoadDataReply) GetEmotion() Emotion {
	if x != nil {
		return x.Emotion
	}
	return Emotion_Angry
}

var File_protos_speech_emotion_recognition_proto protoreflect.FileDescriptor

var file_protos_speech_emotion_recognition_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x6c, 0x69, 0x6d, 0x62, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x67, 0x72,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x67, 0x72, 0x6e, 0x22, 0x5c, 0x0a,
	0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b,
	0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x6c, 0x69, 0x6d, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x64, 0x0a, 0x07, 0x45,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x72, 0x79, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6d, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x65, 0x61, 0x72,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x61, 0x70, 0x70, 0x79, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x4e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x61,
	0x64, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x10,
	0x07, 0x32, 0x92, 0x01, 0x0a, 0x18, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x45, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76,
	0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x2e, 0x6c, 0x69, 0x6d,
	0x62, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x37, 0x2e, 0x6c, 0x69,
	0x6d, 0x62, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x73, 0x70, 0x65, 0x65,
	0x63, 0x68, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x28, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x6c, 0x69, 0x6d, 0x62, 0x69, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f, 0x65,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_speech_emotion_recognition_proto_rawDescOnce sync.Once
	file_protos_speech_emotion_recognition_proto_rawDescData = file_protos_speech_emotion_recognition_proto_rawDesc
)

func file_protos_speech_emotion_recognition_proto_rawDescGZIP() []byte {
	file_protos_speech_emotion_recognition_proto_rawDescOnce.Do(func() {
		file_protos_speech_emotion_recognition_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_speech_emotion_recognition_proto_rawDescData)
	})
	return file_protos_speech_emotion_recognition_proto_rawDescData
}

var file_protos_speech_emotion_recognition_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_speech_emotion_recognition_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protos_speech_emotion_recognition_proto_goTypes = []interface{}{
	(Emotion)(0),            // 0: limbic.protos.speech_emotion_recognition.Emotion
	(*Chunk)(nil),           // 1: limbic.protos.speech_emotion_recognition.Chunk
	(*LoadDataRequest)(nil), // 2: limbic.protos.speech_emotion_recognition.LoadDataRequest
	(*LoadDataReply)(nil),   // 3: limbic.protos.speech_emotion_recognition.LoadDataReply
}
var file_protos_speech_emotion_recognition_proto_depIdxs = []int32{
	0, // 0: limbic.protos.speech_emotion_recognition.LoadDataReply.emotion:type_name -> limbic.protos.speech_emotion_recognition.Emotion
	1, // 1: limbic.protos.speech_emotion_recognition.SpeechEmotionRecognition.LoadData:input_type -> limbic.protos.speech_emotion_recognition.Chunk
	3, // 2: limbic.protos.speech_emotion_recognition.SpeechEmotionRecognition.LoadData:output_type -> limbic.protos.speech_emotion_recognition.LoadDataReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_speech_emotion_recognition_proto_init() }
func file_protos_speech_emotion_recognition_proto_init() {
	if File_protos_speech_emotion_recognition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_speech_emotion_recognition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_speech_emotion_recognition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_speech_emotion_recognition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_speech_emotion_recognition_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_speech_emotion_recognition_proto_goTypes,
		DependencyIndexes: file_protos_speech_emotion_recognition_proto_depIdxs,
		EnumInfos:         file_protos_speech_emotion_recognition_proto_enumTypes,
		MessageInfos:      file_protos_speech_emotion_recognition_proto_msgTypes,
	}.Build()
	File_protos_speech_emotion_recognition_proto = out.File
	file_protos_speech_emotion_recognition_proto_rawDesc = nil
	file_protos_speech_emotion_recognition_proto_goTypes = nil
	file_protos_speech_emotion_recognition_proto_depIdxs = nil
}
